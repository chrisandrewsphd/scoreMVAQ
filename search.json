[{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 scoreMVAQ authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/articles/scoreMVAQ.html","id":"the-michigan-vision-related-anxiety-questionnaire","dir":"Articles","previous_headings":"","what":"The Michigan Vision-related Anxiety Questionnaire","title":"scoreMVAQ","text":"MVAQ (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8184579/) 14-item questionnaire assess anxiety related visual function among patients inherited retinal degeneration. patient’s responses used quantify visual function 2 domains: Anxiety Related Rod Function (ARF) Anxiety Related Cone Function (ACF). MVAQ copyrighted material University Michigan. rights reserved. licensing information, contact University Michigan Technology Transfer Office techtransfer@umich.edu. scoring software openly available.","code":""},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/articles/scoreMVAQ.html","id":"scoring-the-mvaq","dir":"Articles","previous_headings":"","what":"Scoring the MVAQ","title":"scoreMVAQ","text":"graded response model (GRM) built 128 original patients University Michigan. R package mirt used fit GRM can used score responses new patients. R package scoreMVAQ contains (deidentified) mirt model objects wrapper function scoreMVAQ() uses 14 responses generate 2 domain scores (standard errors).","code":""},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/articles/scoreMVAQ.html","id":"installation","dir":"Articles","previous_headings":"Scoring the MVAQ","what":"Installation","title":"scoreMVAQ","text":"scoreMVAQ package available GitHub. easy way install scoreMVAQ Installation required first time scoreMVAQ used machine, major version change R (e.g. 4.2.1 4.3.0), obtain recent version package.","code":"# install.packages(\"devtools\") # devtools::install_github(\"ChrisAndrewsPhd/scoreMVAQ\")"},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/articles/scoreMVAQ.html","id":"examples-from-package","dir":"Articles","previous_headings":"Scoring the MVAQ","what":"Examples from Package","title":"scoreMVAQ","text":"scoreMVAQ package simple examples helpfile scoreMVAQ()","code":"library(scoreMVAQ)  # ?scoreMVAQ # open help file  example(scoreMVAQ) # run examples in help file #>  #> scMVAQ> justme <- read.table( #> scMVAQ+   text = \"Me,0,0,0,0,0,0,0,0,1,1,1,0,0,1\", #> scMVAQ+   sep = \",\") #>  #> scMVAQ> scoreMVAQ(justme) #> $thetas #>   ID       ARF        ACF #> 1 Me -0.168155 -0.8727335 #>  #> $ses #>   ID      ARF      ACF #> 1 Me 0.117081 0.494362 #>  #>  #> scMVAQ> justyou <- data.frame(ID=\"You\", matrix(nrow=1, sample(0:3, 14, TRUE))) #>  #> scMVAQ> scoreMVAQ(justyou) #> $thetas #>    ID        ARF       ACF #> 1 You -0.1389884 0.7157201 #>  #> $ses #>    ID       ARF       ACF #> 1 You 0.1347863 0.2669017 #>  #>  #> scMVAQ> names(justme) <- names(justyou) <- c(\"ID\", sprintf(\"Q%0.2d\", seq(14))) #>  #> scMVAQ> justus <- rbind(justme, justyou) #>  #> scMVAQ> scoreMVAQ(justus, verbose = 1) #> i =  1  #> i =  2  #> $thetas #>    ID        ARF        ACF #> 1  Me -0.1681550 -0.8727335 #> 2 You -0.1389884  0.7157201 #>  #> $ses #>    ID       ARF       ACF #> 1  Me 0.1170810 0.4943620 #> 2 You 0.1347863 0.2669017"},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/articles/scoreMVAQ.html","id":"a-typical-use-case","dir":"Articles","previous_headings":"Scoring the MVAQ","what":"A Typical Use Case","title":"scoreMVAQ","text":"responses administration MVAQ stored single row dataset. example, cross-sectional study, patient one row 14 columns responses 14 items. longitudinal study, patient visit row 14 columns responses. columns data.frame identifier 14 responses order, function scoreMVAQ() can used dataset directly. However, often case data.frame contains additional columns passed scoreMVAQ(), VisitNumber, Sex, ExamDate, ….","code":""},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/articles/scoreMVAQ.html","id":"data-preparation","dir":"Articles","previous_headings":"Scoring the MVAQ > A Typical Use Case","what":"Data Preparation","title":"scoreMVAQ","text":"Read data file create data.frame 15 columns. first column used. carried along. scoreMVAQ() reorder rows. generic approach just use, e.g., seq(nrow(patientresponses)). example, PatID VisitID variables pasted create identifier","code":"patientresponses <- read.csv(   system.file(\"extdata/sampleMVAQ.csv\", package = \"scoreMVAQ\", mustWork = TRUE))   dim(patientresponses) # has 61 columns (need 60) #> [1] 11 16 patientresponses # Columns for PatID and VisitID #>       PatID  VisitID MVAQ01 MVAQ02 MVAQ03 MVAQ04 MVAQ05 MVAQ06 MVAQ07 MVAQ08 #> 1      Best baseline      0      0      0      0      0      0      0      0 #> 2       One baseline      1      1      1      1      1      1      1      1 #> 3       Two baseline      2      2      2      2      2      2      2      2 #> 4     Worst baseline      3      3      3      3      3      3      3      3 #> 5      Miss baseline      4      4      4      4      4      4      4      4 #> 6  Repeater baseline      0      0      0      1      0      1      0      0 #> 7  Repeater   month3      0      0      0      1      0      1      0      0 #> 8  Repeater   month6      0      1      0      1      0      0      1      0 #> 9  Repeater   month9      2      2      1      1      0      1      0      0 #> 10      Han baseline      0      1      0      1      1      1      1      0 #> 11     Solo baseline      0     NA      0      0      0      0      1      0 #>    MVAQ09 MVAQ10 MVAQ11 MVAQ12 MVAQ13 MVAQ14 #> 1       0      0      0      0      0      0 #> 2       1      1      1      1      1      1 #> 3       2      2      2      2      2      2 #> 4       3      3      3      3      3      3 #> 5       4      4      4      4      4      4 #> 6       0      0      1      0      0      0 #> 7       0      0      1      0      0      1 #> 8       0      0      1      0      0      1 #> 9       0      0      1      0      0      1 #> 10      2      0      1      0      0      0 #> 11      1      1      0      0      0      0  dat_for_MVAQ <- data.frame(   ID_Visit = paste(     patientresponses$PatID,     patientresponses$VisitID,     sep = \"|\"),   patientresponses[, seq(from = 3, by = 1, length = 14)]) dim(dat_for_MVAQ) #> [1] 11 15 dat_for_MVAQ #>             ID_Visit MVAQ01 MVAQ02 MVAQ03 MVAQ04 MVAQ05 MVAQ06 MVAQ07 MVAQ08 #> 1      Best|baseline      0      0      0      0      0      0      0      0 #> 2       One|baseline      1      1      1      1      1      1      1      1 #> 3       Two|baseline      2      2      2      2      2      2      2      2 #> 4     Worst|baseline      3      3      3      3      3      3      3      3 #> 5      Miss|baseline      4      4      4      4      4      4      4      4 #> 6  Repeater|baseline      0      0      0      1      0      1      0      0 #> 7    Repeater|month3      0      0      0      1      0      1      0      0 #> 8    Repeater|month6      0      1      0      1      0      0      1      0 #> 9    Repeater|month9      2      2      1      1      0      1      0      0 #> 10      Han|baseline      0      1      0      1      1      1      1      0 #> 11     Solo|baseline      0     NA      0      0      0      0      1      0 #>    MVAQ09 MVAQ10 MVAQ11 MVAQ12 MVAQ13 MVAQ14 #> 1       0      0      0      0      0      0 #> 2       1      1      1      1      1      1 #> 3       2      2      2      2      2      2 #> 4       3      3      3      3      3      3 #> 5       4      4      4      4      4      4 #> 6       0      0      1      0      0      0 #> 7       0      0      1      0      0      1 #> 8       0      0      1      0      0      1 #> 9       0      0      1      0      0      1 #> 10      2      0      1      0      0      0 #> 11      1      1      0      0      0      0"},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/articles/scoreMVAQ.html","id":"scoring","dir":"Articles","previous_headings":"Scoring the MVAQ > A Typical Use Case","what":"Scoring","title":"scoreMVAQ","text":"function scoreMVAQ() returns list 2 elements. element data.frame 3 columns: ID 2 domain scores. data.frame number rows input.","code":"MVAQlist <- scoreMVAQ::scoreMVAQ(dat_for_MVAQ, verbose = 0) str(MVAQlist) # list with 2 elements #> List of 2 #>  $ thetas:'data.frame':  11 obs. of  3 variables: #>   ..$ ID : chr [1:11] \"Best|baseline\" \"One|baseline\" \"Two|baseline\" \"Worst|baseline\" ... #>   ..$ ARF: num [1:11] -1.19713 -0.00306 0.44315 1.63047 NA ... #>   ..$ ACF: num [1:11] -1.327 0.593 1.275 2.623 NA ... #>  $ ses   :'data.frame':  11 obs. of  3 variables: #>   ..$ ID : chr [1:11] \"Best|baseline\" \"One|baseline\" \"Two|baseline\" \"Worst|baseline\" ... #>   ..$ ARF: num [1:11] 0.535 0.113 0.11 0.486 NA ... #>   ..$ ACF: num [1:11] 0.614 0.242 0.227 0.475 NA ...  MVAQthetas <- MVAQlist[[\"thetas\"]] # domain estimates MVAQses <- MVAQlist[[\"ses\"]] # standard error estimates"},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/articles/scoreMVAQ.html","id":"wrap-up","dir":"Articles","previous_headings":"Scoring the MVAQ > A Typical Use Case","what":"Wrap up","title":"scoreMVAQ","text":"scoreMVAQ() output can saved R object, written external file, used create summary data, plotted, … Summary Baseline ARF ACF","code":"patientthetas <- data.frame(patientresponses, MVAQthetas[, -1]) patientthetas #>       PatID  VisitID MVAQ01 MVAQ02 MVAQ03 MVAQ04 MVAQ05 MVAQ06 MVAQ07 MVAQ08 #> 1      Best baseline      0      0      0      0      0      0      0      0 #> 2       One baseline      1      1      1      1      1      1      1      1 #> 3       Two baseline      2      2      2      2      2      2      2      2 #> 4     Worst baseline      3      3      3      3      3      3      3      3 #> 5      Miss baseline      4      4      4      4      4      4      4      4 #> 6  Repeater baseline      0      0      0      1      0      1      0      0 #> 7  Repeater   month3      0      0      0      1      0      1      0      0 #> 8  Repeater   month6      0      1      0      1      0      0      1      0 #> 9  Repeater   month9      2      2      1      1      0      1      0      0 #> 10      Han baseline      0      1      0      1      1      1      1      0 #> 11     Solo baseline      0     NA      0      0      0      0      1      0 #>    MVAQ09 MVAQ10 MVAQ11 MVAQ12 MVAQ13 MVAQ14          ARF         ACF #> 1       0      0      0      0      0      0 -1.197130771 -1.32692104 #> 2       1      1      1      1      1      1 -0.003059503  0.59326736 #> 3       2      2      2      2      2      2  0.443153756  1.27527715 #> 4       3      3      3      3      3      3  1.630465525  2.62299468 #> 5       4      4      4      4      4      4           NA          NA #> 6       0      0      1      0      0      0 -0.509326217 -0.20997665 #> 7       0      0      1      0      0      1 -0.509326217 -0.06599023 #> 8       0      0      1      0      0      1 -0.417189669 -0.10339904 #> 9       0      0      1      0      0      1 -0.509326217  0.50977036 #> 10      2      0      1      0      0      0 -0.207031906  0.09479659 #> 11      1      1      0      0      0      0 -0.215690843 -1.16805918  # save( #   MVAQlist, dat_for_MVAQ, patientthetas, #   file = \"./example.RData\") #  # write.csv( #   MVAQthetas, #   file = \"./examplethetas.csv\", #   row.names = FALSE, na = \"\") library(knitr) library(kableExtra)  kableExtra::kable_styling(   knitr::kable(     sapply(       subset(         patientthetas,         subset = VisitID == \"baseline\",         select = names(MVAQthetas[, -1])),       quantile, na.rm = TRUE),     digits = 2,     caption = \"Summary of Baseline ARF and ACF\"),   full_width = FALSE) repeater <- subset(   patientthetas,   subset = PatID == \"Repeater\",   select = c(\"VisitID\", \"ARF\", \"ACF\"))  par(mar = c(4.1, 4.1, 3, 1), las = 1) matplot(   repeater[, c(\"ARF\", \"ACF\")],   type = \"b\", pch = 16, lty = 1, lwd = 2, col = c(\"green\", \"grey\"),   ylab = \"Anxiety\", ylim = c(-1.5, 2.6),   xlab = \"Visit\", xaxt = \"n\",   main = \"Longitudinal Scores for Patient 'Repeater'\") axis(   side = 1,   at = seq(nrow(repeater)),   labels = repeater$VisitID) legend(   \"top\", bty = \"n\", col = c(\"green\", \"grey\"), lwd = 2, pch = 16,   legend = c(\"ARF\", \"ACF\"), ncol = 2)"},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chris Andrews. Author, maintainer.","code":""},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Andrews C (2024). scoreMVAQ: Score Michigan Vision-related Anxiety Questionnaire. R package version 1.1, https://chrisandrewsphd.github.io/scoreMVAQ/, https://github.com/chrisandrewsphd/scoreMVAQ.","code":"@Manual{,   title = {scoreMVAQ: Score the Michigan Vision-related Anxiety Questionnaire},   author = {Chris Andrews},   year = {2024},   note = {R package version 1.1, https://chrisandrewsphd.github.io/scoreMVAQ/},   url = {https://github.com/chrisandrewsphd/scoreMVAQ}, }"},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/index.html","id":"scoremvaq","dir":"","previous_headings":"","what":"Score the Michigan Vision-related Anxiety Questionnaire","title":"Score the Michigan Vision-related Anxiety Questionnaire","text":"goal scoreMVAQ convert 14 responses Michigan Vision-related Anxiety Questionnaire (MVAQ) two domain scores: Anxiety due Rod Function (ARF) Anxiety due Cone Function (ACF)","code":""},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Score the Michigan Vision-related Anxiety Questionnaire","text":"can install development version scoreMVAQ GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"chrisandrewsphd/scoreMVAQ\")"},{"path":[]},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/index.html","id":"example-1","dir":"","previous_headings":"Examples","what":"Example 1","title":"Score the Michigan Vision-related Anxiety Questionnaire","text":"basic example shows score data single individual. justme data.frame 15 variables 1 row. 15 variables patient identifier followed 14 responses.","code":"library(scoreMVAQ)  justme <- read.table(   text = \"Me,0,0,0,0,0,0,0,0,1,1,1,0,0,1\",   sep = \",\") justme #>   V1 V2 V3 V4 V5 V6 V7 V8 V9 V10 V11 V12 V13 V14 V15 #> 1 Me  0  0  0  0  0  0  0  0   1   1   1   0   0   1  scoreMVAQ(justme) #> $thetas #>   ID        ARF        ACF #> 1 Me -0.1694411 -0.8727335 #>  #> $ses #>   ID       ARF      ACF #> 1 Me 0.1146743 0.494362"},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/index.html","id":"example-2","dir":"","previous_headings":"Examples","what":"Example 2","title":"Score the Michigan Vision-related Anxiety Questionnaire","text":"need score many respondents (respondent several visits), can include single data.frame call scoreMVAQ(). data.frame must 15 columns still can 1 row. option verbose = 1 provides messaging execution scoreMVAQ().","code":"library(scoreMVAQ)  justme <- read.table(   text = \"Me,0,0,0,0,0,0,0,0,1,1,1,0,0,1\",   sep = \",\") justyou <- data.frame(ID=\"You\", matrix(nrow=1, sample(0:3, 14, TRUE))) andyoutoo <- data.frame(ID=\"You 2\", matrix(nrow=1, sample(0:3, 14, TRUE)))  names(justme) <- names(justyou) <- names(andyoutoo) <-    c(\"ID\", sprintf(\"Q%0.2d\", seq(14)))  justus <- rbind(justme, justyou, andyoutoo) justus #>      ID Q01 Q02 Q03 Q04 Q05 Q06 Q07 Q08 Q09 Q10 Q11 Q12 Q13 Q14 #> 1    Me   0   0   0   0   0   0   0   0   1   1   1   0   0   1 #> 2   You   0   0   1   3   2   1   2   2   2   2   0   0   2   1 #> 3 You 2   1   3   1   3   2   0   3   0   2   0   0   2   0   1  scoreMVAQ(justus, verbose = 1) #> i =  1  #> i =  2  #> i =  3 #> $thetas #>      ID         ARF        ACF #> 1    Me -0.16944109 -0.8727335 #> 2   You  0.22859445  0.9363263 #> 3 You 2 -0.04037882  0.9850800 #>  #> $ses #>      ID       ARF       ACF #> 1    Me 0.1146743 0.4943620 #> 2   You 0.1437133 0.2803585 #> 3 You 2 0.1589608 0.2844717"},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/reference/scoreMVAQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Score the Michigan Vision-related Anxiety Questionnaire — scoreMVAQ","title":"Score the Michigan Vision-related Anxiety Questionnaire — scoreMVAQ","text":"Score Michigan Vision-related Anxiety Questionnaire","code":""},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/reference/scoreMVAQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score the Michigan Vision-related Anxiety Questionnaire — scoreMVAQ","text":"","code":"scoreMVAQ(dat, verbose = 0)"},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/reference/scoreMVAQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score the Michigan Vision-related Anxiety Questionnaire — scoreMVAQ","text":"dat data.frame N rows 15 columns.  First column patient ID remaining columns responses 14 items.  Responses integers 0 4. verbose number indicating amount printing console function execution. 0 (default) none. Higher numbers may result printing.","code":""},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/reference/scoreMVAQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score the Michigan Vision-related Anxiety Questionnaire — scoreMVAQ","text":"list two components, data.frame 3 variables: ID, ARF, ACF. first component, named thetas, contains IDs (column 1 input), 2 domain scores (ARF, ACF) patient.  second, named ses, contains IDs standard errors thetas.","code":""},{"path":"https://chrisandrewsphd.github.io/scoreMVAQ/reference/scoreMVAQ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score the Michigan Vision-related Anxiety Questionnaire — scoreMVAQ","text":"","code":"justme <- read.table(   text = \"Me,0,0,0,0,0,0,0,0,1,1,1,0,0,1\",   sep = \",\") scoreMVAQ(justme) #> $thetas #>   ID       ARF        ACF #> 1 Me -0.168155 -0.8727335 #>  #> $ses #>   ID      ARF      ACF #> 1 Me 0.117081 0.494362 #>   justyou <- data.frame(ID=\"You\", matrix(nrow=1, sample(0:3, 14, TRUE))) scoreMVAQ(justyou) #> $thetas #>    ID       ARF     ACF #> 1 You 0.4144947 0.71556 #>  #> $ses #>    ID      ARF       ACF #> 1 You 0.152703 0.3146975 #>   names(justme) <- names(justyou) <- c(\"ID\", sprintf(\"Q%0.2d\", seq(14))) justus <- rbind(justme, justyou) scoreMVAQ(justus, verbose = 1) #> i =  1  #> i =  2  #> $thetas #>    ID        ARF        ACF #> 1  Me -0.1681550 -0.8727335 #> 2 You  0.4144947  0.7155600 #>  #> $ses #>    ID      ARF       ACF #> 1  Me 0.117081 0.4943620 #> 2 You 0.152703 0.3146975 #>"}]
